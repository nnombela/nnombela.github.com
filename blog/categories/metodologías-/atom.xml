<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Metodologías, | NN.blog.last()]]></title>
  <link href="http://nnombela.github.com/blog/categories/metodologías-/atom.xml" rel="self"/>
  <link href="http://nnombela.github.com/"/>
  <updated>2013-11-28T20:26:22+01:00</updated>
  <id>http://nnombela.github.com/</id>
  <author>
    <name><![CDATA[Nicolas Nombela]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Agilescéptico]]></title>
    <link href="http://nnombela.github.com/blog/2013/11/17/agilesceptico/"/>
    <updated>2013-11-17T19:23:00+01:00</updated>
    <id>http://nnombela.github.com/blog/2013/11/17/agilesceptico</id>
    <content type="html"><![CDATA[<p>Lo confieso, me declaro “agilescéptico” y tengo que admitir que con el tiempo cada vez más, no <em>per se</em> sino más bien precavido y escéptico respecto a todo el circo que se ha montado alrededor de las metodologías ágiles.</p>

<p>Me explico, en mi opinión en desarrollo software sólo hay dos cosas importantes:</p>

<ul style="list-style-type: none;">
<li>1. Los <strong>Programadores</strong></li>
<li>2. El <strong>Código</strong></li>
</ul>


<p>Y en ese orden, y lo demás son florituras. Dicho de otra manera:</p>

<p>Con los programadores adecuados y dejándoles escribir el código que ellos consideren adecuado ya está casi todo hecho, la receta del éxito en desarrollo software ya estaría básicamente formulada. Y hablo del éxito técnico no comercial, esa es otra historia.</p>

<blockquote><p>La única “agilidad” que importa es la que permite libremente a los <strong>programadores</strong> escribir, leer y cambiar <strong>código</strong> con rapidez (pero sin prisas).</p></blockquote>

<p>Ahora bien, lo primero que decidirán esos programadores (ellos y no otras personas) para poder escribir código de calidad serán las herramientas que van a utilizar, y de nuevo nos encontramos dos aspectos:</p>

<ul style="list-style-type: none;">
<li>3. Las <strong>Tecnologías</strong></li>
<li>4. La <strong>Metodología</strong></li>
</ul>


<p>Y en ese orden, porque el orden de nuevo importa.</p>

<!-- more -->


<p>Así que ya tenemos exactamente cuál es la importancia de la Metodología en Desarrollo Software: ocupa un <strong>modesto cuarto puesto</strong>, la metodología es importante pero ni siquiera está en el <em>podium</em> de lo más importante.</p>

<p>Y a las pruebas me remito, si buscas en los proyectos de software de más éxito encontrás básicamente grandes programadores (frecuentemente sus fundadores) y código de calidad, también algunas tecnologías usadas acertadamente pero apenas rastro de la metodología empleada, algo hay sí pero poco.</p>

<p>Y esto es lo que frecuentemente olvidan los predicadores, evangelistas y demás mundillo alrededor de las metodologías ágiles, muchas veces honestos entusiastas pero pocas veces con la legitimidad que les daría ser programadores competentes que no han dejado de programar.</p>

<p>…. y de ahí el origen de mi “agilescepticismo”.</p>

<p><strong>Nota:</strong> Conste que a mi me mola Scrum (incluso me divierte), lo de las tarjetas, los cerdos y las gallinas es genial (sin ironía); y aplaudo, valoro y envidio ”prácticas agiles” como ”Code Review”, “Pair Programming” y TDD, pero no se me olvida cuál es su importancia relativa respecto a lo que realmente importa.</p>
]]></content>
  </entry>
  
</feed>
